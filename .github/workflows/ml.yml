name: "CI/CD: pipeline MLflow"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ml_pipeline:
    runs-on: ubuntu-latest

    # Todos los "run:" se ejecutan dentro de mlflow-deploy
    defaults:
      run:
        shell: bash
        working-directory: mlflow-deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train
        run: |
          make train

      - name: Validate
        run: |
          make test

      - name: Upload MLflow artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlflow-deploy/mlruns
	
      - name: Upload MLflow runs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlflow-deploy/mlruns
	

  deploy:
    name: Deploy (publicar modelo como Release)
    needs: [ml_pipeline]           # se ejecuta después y sólo si ml_pipeline fue OK
    if: ${{ success() }}
    runs-on: ubuntu-latest
    permissions:
      contents: write              # necesario para crear Releases con GITHUB_TOKEN
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Descargar artifacts (modelo/metrics)
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: dist_artifacts

      - name: Descargar artifacts (mlruns)
        uses: actions/download-artifact@v4
        with:
          name: mlruns
          path: dist_mlruns

      - name: Empaquetar mlruns en .zip
        run: |
          cd dist_mlruns
          zip -r ../mlruns.zip .
          cd -

      - name: Crear Release y adjuntar archivos
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "model-${{ github.sha }}"
          name: "ML model – ${{ github.sha }}"
          draft: false
          prerelease: false
          files: |
            dist_artifacts/model.pkl
            dist_artifacts/metrics.json
            mlruns.zip
